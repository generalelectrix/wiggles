(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(["exports", "babel-runtime/core-js/object/get-prototype-of", "babel-runtime/helpers/classCallCheck", "babel-runtime/helpers/possibleConstructorReturn", "babel-runtime/helpers/createClass", "babel-runtime/helpers/inherits", "react", "fable-core/umd/Symbol", "fable-core/umd/Util", "react-native", "fable-elmish/umd/elmish"], factory);
    } else if (typeof exports !== "undefined") {
        factory(exports, require("babel-runtime/core-js/object/get-prototype-of"), require("babel-runtime/helpers/classCallCheck"), require("babel-runtime/helpers/possibleConstructorReturn"), require("babel-runtime/helpers/createClass"), require("babel-runtime/helpers/inherits"), require("react"), require("fable-core/umd/Symbol"), require("fable-core/umd/Util"), require("react-native"), require("fable-elmish/umd/elmish"));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, global.getPrototypeOf, global.classCallCheck, global.possibleConstructorReturn, global.createClass, global.inherits, global.react, global.Symbol, global.Util, global.reactNative, global.elmish);
        global.reactNative = mod.exports;
    }
})(this, function (exports, _getPrototypeOf, _classCallCheck2, _possibleConstructorReturn2, _createClass2, _inherits2, _react, _Symbol2, _Util, _reactNative, _elmish) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.Program = exports.Components = undefined;

    var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

    var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

    var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

    var _createClass3 = _interopRequireDefault(_createClass2);

    var _inherits3 = _interopRequireDefault(_inherits2);

    var _Symbol3 = _interopRequireDefault(_Symbol2);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    var Components = exports.Components = function (__exports) {
        var appState = (Object.defineProperty(__exports, 'appState', {
            get: function get() {
                return appState;
            },
            set: function set(x) {
                return appState = x;
            }
        }), null);

        var App = __exports.App = function (_Component) {
            (0, _inherits3.default)(App, _Component);
            (0, _createClass3.default)(App, [{
                key: _Symbol3.default.reflection,
                value: function () {
                    return (0, _Util.extendInfo)(App, {
                        type: "Elmish.ReactNative.Components.App",
                        interfaces: [],
                        properties: {}
                    });
                }
            }]);

            function App(props) {
                var _this3 = this;

                (0, _classCallCheck3.default)(this, App);

                var _this2 = (0, _possibleConstructorReturn3.default)(this, (App.__proto__ || (0, _getPrototypeOf2.default)(App)).call(this, props));

                var _this = {
                    contents: null
                };
                var _this_1 = _this2;
                _this2.contents = _this2;
                _this2["init@16"] = 1;

                if (appState != null) {
                    (function () {
                        var state = appState;

                        appState = function () {
                            var setState = function () {
                                var objectArg = _this2.contents;
                                return function (arg00) {
                                    _this3.state = arg00;
                                };
                            }();

                            return {
                                render: state.render,
                                setState: setState
                            };
                        }();

                        _this3.state = state;
                    })();
                } else {
                    throw new Error("was Elmish.ReactNative.Program.withReactNative called?");
                }

                return _this2;
            }

            (0, _createClass3.default)(App, [{
                key: "componentDidMount",
                value: function () {
                    var _this4 = this;

                    appState = function () {
                        var inputRecord = appState;

                        var setState = function setState(arg00) {
                            _this4.setState(arg00);
                        };

                        return {
                            render: inputRecord.render,
                            setState: setState
                        };
                    }();
                }
            }, {
                key: "componentWillUnmount",
                value: function () {
                    var _this5 = this;

                    appState = function () {
                        var inputRecord = appState;

                        var setState = function setState(value) {
                            value;
                        };

                        return {
                            render: _this5.state.render,
                            setState: setState
                        };
                    }();
                }
            }, {
                key: "render",
                value: function () {
                    return this.state.render(null);
                }
            }]);
            return App;
        }(_react.Component);

        (0, _Symbol2.setType)("Elmish.ReactNative.Components.App", App);
        return __exports;
    }({});

    var Program = exports.Program = function (__exports) {
        var withReactNative = __exports.withReactNative = function (appKey, program) {
            _reactNative.AppRegistry.registerComponent(appKey, function () {
                return Components.App;
            });

            var render = function render(m) {
                return function (d) {
                    if (Components.appState != null) {
                        var state = Components.appState;
                        state.setState({
                            render: function render() {
                                return program.view(m)(d);
                            },
                            setState: state.setState
                        });
                    } else {
                        Components.appState = {
                            render: function render() {
                                return program.view(m)(d);
                            },
                            setState: function setState(value) {
                                value;
                            }
                        };
                    }
                };
            };

            return new _elmish.Program(program.init, program.update, program.subscribe, program.view, render, program.onError);
        };

        return __exports;
    }({});
});
//# sourceMappingURL=react-native.js.map