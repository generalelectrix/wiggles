{"version":3,"sources":["..\\..\\src\\react-native-image-picker\\Fable.Helpers.ReactNativeImagePicker.fs"],"names":[],"mappings":";;AAiCI,OACA;AAAA;AAAiD;AAEjD,OACA;AAAA,uBACI;AAAA,+BAGQ;AAAA,gBAAG,iBAAH,EACI;AAAA,oBAAG,2BAAH,EACI;AAAA;AAA2B,iBAD/B,MAGI;AAAA,4BAAS,uBAAT;AAAuC;AAAA,aAJ/C,MAKK;AAAA;AAAc;AAAA,SAR3B;AAQ4B,KAThC;AAUC;AAED,OACA;AAAA;AAA8C;AAG9C,OACA;AAAA;AAAoD","file":"Fable.Helpers.ReactNativeImagePicker.js","sourcesContent":["module Fable.Helpers.ReactNativeImagePicker\r\n\r\nopen Fable.Core\r\nopen Fable.Import\r\nopen Fable.Import.ReactNativeImagePicker\r\ntype IP = ReactNativeImagePicker.Globals\r\n\r\nmodule Props =\r\n    [<KeyValueList>]\r\n    type IImagePickerOptions =\r\n        interface end\r\n\r\n    [<KeyValueList>]\r\n    type ImagePickerOptions =\r\n    | Title of string\r\n    | CancelButtonTitle of string\r\n    | TakePhotoButtonTitle of string\r\n    | ChooseFromLibraryButtonTitle of string\r\n    | CameraType of CameraType\r\n    | MediaType of MediaType\r\n    | MaxWidth of int\r\n    | MaxHeight of int\r\n    | Quality of float\r\n    | VideoQuality of VideoQuality\r\n    | DurationLimit of int\r\n    | Rotation of int\r\n    | AllowsEditing of bool\r\n    | NoData of bool\r\n    | StorageOptions of StorageOptions\r\n        interface IImagePickerOptions\r\n\r\nopen Props\r\n\r\nlet showImagePicker (props: IImagePickerOptions list) f =\r\n    IP.ImagePicker.showImagePicker(props |> unbox, f)\r\n\r\nlet showImagePickerAsync (props: IImagePickerOptions list) =\r\n    Fable.PowerPack.Promise.create(fun onSuccess onError ->\r\n        showImagePicker\r\n            props\r\n            (fun result ->\r\n                if not result.didCancel then\r\n                    if System.String.IsNullOrEmpty result.error then\r\n                        onSuccess (Some result.uri)\r\n                    else\r\n                        onError (System.Exception result.error)\r\n                else onSuccess None)\r\n    )\r\n\r\nlet launchCamera (props: IImagePickerOptions list) f =\r\n    IP.ImagePicker.launchCamera(props |> unbox, f)\r\n\r\n\r\nlet launchImageLibrary (props: IImagePickerOptions list) f =\r\n    IP.ImagePicker.launchImageLibrary(props |> unbox, f)"]}