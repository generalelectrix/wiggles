(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(["exports", "react-native-image-picker", "fable-core/umd/String"], factory);
    } else if (typeof exports !== "undefined") {
        factory(exports, require("react-native-image-picker"), require("fable-core/umd/String"));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, global.reactNativeImagePicker, global.String);
        global.FableHelpersReactNativeImagePicker = mod.exports;
    }
})(this, function (exports, _reactNativeImagePicker, _String) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.showImagePicker = showImagePicker;
    exports.showImagePickerAsync = showImagePickerAsync;
    exports.launchCamera = launchCamera;
    exports.launchImageLibrary = launchImageLibrary;

    var _reactNativeImagePicker2 = _interopRequireDefault(_reactNativeImagePicker);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    function showImagePicker(props, f) {
        _reactNativeImagePicker2.default.showImagePicker(props, f);
    }

    function showImagePickerAsync(props) {
        return new Promise(function (onSuccess, onError) {
            showImagePicker(props, function (result) {
                if (!result.didCancel) {
                    if ((0, _String.isNullOrEmpty)(result.error)) {
                        onSuccess(result.uri);
                    } else {
                        onError(new Error(result.error));
                    }
                } else {
                    onSuccess(null);
                }
            });
        });
    }

    function launchCamera(props, f) {
        _reactNativeImagePicker2.default.launchCamera(props, f);
    }

    function launchImageLibrary(props, f) {
        _reactNativeImagePicker2.default.launchImageLibrary(props, f);
    }
});
//# sourceMappingURL=Fable.Helpers.ReactNativeImagePicker.js.map