{"version":3,"sources":["..\\..\\..\\src\\react-native-push-notification\\Fable.Helpers.ReactNativePushNotification.fs"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgEO;AAGC,8CACA;AAAA;AAA6C,SAD7C;;AAMA,sFACA;AAAA;AAAyD,SADzD;;AAIA,8DACA;AAAA,oEACI,cACI;AAAA;AAAA,aADJ,QADJ;AAGe,SAJf;;AAQA,8EACA;AAAA,4EACI,cACI;AAAA;AAAA;AAAA,aADJ,QADJ;AAIe,SALf;;AAaA,4EACA;AAAA;AAA2D,SAD3D;;AAIA,kFACA;AAAA;AAAiD,SADjD;;AAtCD;AAsC4B,KAtC5B","file":"Fable.Helpers.ReactNativePushNotification.js","sourcesContent":["/// Contains functions for push notifications.\r\nmodule Fable.Helpers.ReactNativePushNotification\r\n\r\nopen Fable.Core\r\nopen Fable.Import\r\nopen Fable.Import.ReactNativePushNotification\r\n\r\nopen Fable.Core.JsInterop\r\n\r\ntype PN = ReactNativePushNotification.Globals\r\n\r\n/// Contains properties for push notifications.\r\nmodule Props =\r\n    [<KeyValueList>]\r\n    type IPushNotificationOptions =\r\n        interface end\r\n\r\n    [<KeyValueList>]\r\n    type PushNotificationOptions =\r\n    | OnRegister of (obj -> unit)\r\n    | SenderID of string\r\n    | PopInitialNotification of bool\r\n    | RequestPermissions of bool\r\n    | OnNotification of (obj -> unit)\r\n        interface IPushNotificationOptions\r\n\r\n\r\n    [<KeyValueList>]\r\n    type ILocalPushNotificationProperties =\r\n        interface end\r\n\r\n    [<KeyValueList>]\r\n    type LocalPushNotificationProperties =\r\n    // Android\r\n    /// Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID\r\n    | Id of string\r\n    | Ticker of string\r\n    | AutoCancel of bool\r\n    | LargeIcon of string\r\n    | SmallIcon of string\r\n    | BigText of string\r\n    | SubText of string\r\n    | Color of string\r\n    | Vibrate of bool\r\n    /// Vibration length in milliseconds, ignored if Vibrate = false. Default: 1000ms\r\n    | Vibration of float\r\n    | Tag of string\r\n    | Group of string\r\n    | OnGoing of bool\r\n    // Android and iOS\r\n    /// The title of the message. For iOS this is only used in apple watch, the title will be the app name on other iOS devices.\r\n    | Title of string\r\n    | PlaySound of bool\r\n    | SoundName of string\r\n    | Number of string\r\n    /// Repeating interval. Could be one of `week`, `day`, `hour`, `minute, `time`.\r\n    | RepeatType of string\r\n    | Actions of string\r\n        interface ILocalPushNotificationProperties\r\n\r\n\r\nopen Props\r\n\r\n/// Contains functions for push notifications.\r\nmodule PushNotification =\r\n\r\n    /// Configures the push notification system.\r\n    let configure (props: IPushNotificationOptions list) =\r\n        PN.PushNotification?configure(props |> unbox) |> ignore\r\n\r\n\r\n    /// Set the application badge icon number.\r\n    /// Works natively in iOS and uses the ShortcutBadger on Android, and as such will not work on all Android devices.\r\n    let setApplicationIconBadgeNumber (number:int) =\r\n        PN.PushNotification?setApplicationIconBadgeNumber(number) |> ignore\r\n\r\n    /// Sends a local push notification.\r\n    let localNotification (props: ILocalPushNotificationProperties list) (message: string) =\r\n        PN.PushNotification?localNotification(\r\n            JS.Object.assign(\r\n                createObj [\"message\" ==> message],\r\n                props))\r\n        |> ignore\r\n\r\n    /// Schedules a local push notification.\r\n    let localNotificationSchedule (props: ILocalPushNotificationProperties list) (date:System.DateTime) (message: string) =\r\n        PN.PushNotification?localNotificationSchedule(\r\n            JS.Object.assign(\r\n                createObj  [\"message\" ==> message\r\n                            \"date\" ==> date],\r\n                props))\r\n        |> ignore\r\n\r\n    /// Cancels a local Push Notification.\r\n    /// The the details parameter allows you to specify a userInfo dictionary that can be used to match one or more scheduled notifications.\r\n    /// Each matched notification is cancelled and its alerts removed from the notification centre.\r\n    ///\r\n    /// Sample: PushNotification.cancelLocalNotifications [LocalPushNotificationProperties.Id \"123\"]\r\n    let cancelLocalNotifications (details: ILocalPushNotificationProperties list) =\r\n        PN.PushNotification?cancelLocalNotifications(unbox details) |> ignore\r\n\r\n    /// Cancels all scheduled notifications and clears the notifications alerts that are in the notification centre.\r\n    let cancelAllLocalNotifications () =\r\n        PN.PushNotification?cancelAllLocalNotifications() |> ignore"]}