(function (global, factory) {
    if (typeof define === "function" && define.amd) {
        define(["exports", "react-native-push-notification"], factory);
    } else if (typeof exports !== "undefined") {
        factory(exports, require("react-native-push-notification"));
    } else {
        var mod = {
            exports: {}
        };
        factory(mod.exports, global.reactNativePushNotification);
        global.FableHelpersReactNativePushNotification = mod.exports;
    }
})(this, function (exports, _reactNativePushNotification) {
    "use strict";

    Object.defineProperty(exports, "__esModule", {
        value: true
    });
    exports.PushNotification = undefined;

    var _reactNativePushNotification2 = _interopRequireDefault(_reactNativePushNotification);

    function _interopRequireDefault(obj) {
        return obj && obj.__esModule ? obj : {
            default: obj
        };
    }

    var PushNotification = exports.PushNotification = function (__exports) {
        var configure = __exports.configure = function (props) {
            _reactNativePushNotification2.default.configure(props);
        };

        var setApplicationIconBadgeNumber = __exports.setApplicationIconBadgeNumber = function (number) {
            _reactNativePushNotification2.default.setApplicationIconBadgeNumber(number);
        };

        var localNotification = __exports.localNotification = function (props, message) {
            _reactNativePushNotification2.default.localNotification(Object.assign({
                message: message
            }, props));
        };

        var localNotificationSchedule = __exports.localNotificationSchedule = function (props, date, message) {
            _reactNativePushNotification2.default.localNotificationSchedule(Object.assign({
                message: message,
                date: date
            }, props));
        };

        var cancelLocalNotifications = __exports.cancelLocalNotifications = function (details) {
            _reactNativePushNotification2.default.cancelLocalNotifications(details);
        };

        var cancelAllLocalNotifications = __exports.cancelAllLocalNotifications = function () {
            _reactNativePushNotification2.default.cancelAllLocalNotifications(null);
        };

        return __exports;
    }({});
});
//# sourceMappingURL=Fable.Helpers.ReactNativePushNotification.js.map